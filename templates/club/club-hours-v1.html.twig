{% extends 'dashboard.html.twig' %}


{% block stylesheets2 %}
	<link href="/assets/clubs/club.css" rel="stylesheet">
	<link href="/assets/showcase/showcase.css" rel="stylesheet">
	<link rel="stylesheet" href="/vendor/jquery.skedTape/jquery.skedTape.css">
{% endblock %}


{% block dashboardcontent %}

<br>
{% include ['club/' ~ club.uuid ~ '/hours.html.twig', 'club/default-hours.html.twig'] %}


{% endblock %}


{% block javascriptsafter1 %}
	<script src="/vendor/jquery.skedTape/jquery.skedTape.js"></script>
	{# https://www.jqueryscript.net/time-clock/Schedule-Component-skedTape.html #}
	<script type="text/javascript">
		// --------------------------- Data --------------------------------

var locations2 = [
	{% set orderDays = {'monday':1, 'tuesday':2, 'wednesday':3, 'thursday':4, 'friday':5, 'saturday':6, 'sunday':7} %}
	{% set daysDone = [] %}
	{% for clubLesson in clubLessons %}
		{% if clubLesson.day_of_week not in daysDone %}
			{
				id: '{{ clubLesson.day_of_week }}',
				name: '{{ clubLesson.day_of_week|trans }}',
				order: {{ orderDays[clubLesson.day_of_week] }}
			},
			{% set daysDone = daysDone|merge([clubLesson.day_of_week]) %}
		{% endif %}
	{% endfor %}
];

{% set minHour = 23 %}
{% set maxHour = 0 %}

var events2 = [
	{% for clubLesson in clubLessons %}
		{
			name: '{{ clubLesson.discipline }}',
			location: '{{ clubLesson.day_of_week }}',
			start: today({{ clubLesson.start_time|split(':')[0] }}, {{ clubLesson.start_time|split(':')[1] }}),
			end: today({{ clubLesson.end_time|split(':')[0] }}, {{ clubLesson.end_time|split(':')[1] }})
		},
		
		{% set minHour = min(minHour, clubLesson.start_time|split(':')[0]) %}
		{% set maxHour = max(maxHour, clubLesson.end_time|split(':')[0]) %}
	{% endfor %}
];	


{% set maxHour = maxHour + 1 %}

// {{ minHour}}, {{ maxHour}}, 

		var locations = [
			{id: '1', name: 'San Francisco'},
			{id: '2', name: 'Sydney'},
			{id: '3', name: 'New York'},
			{id: 'london', name: 'London'},
			{id: '5', name: 'Copenhagen'},
			{id: '6', name: 'Berlin'}
		];
		var events = [
			{
				name: 'Meeting 1',
				location: 'london',
				start: today(4, 15),
				end: today(7, 30)
			},
			{
                name: 'Meeting 2 (ovelapping)',
                location: 'london',
                start: today(6, 30),
                end: today(9, 15)
            },

            {
                    name: 'Meeting 3 (ovelapping)',
                    location: 'london',
                    start: today(6, 30),
                    end: today(9, 15)
                },
                {
                    name: 'Meeting 3 (ovelapping)',
                    location: 'london',
                    start: today(9, 0),
                    end: today(11, 30)
                },
                {
                    name: 'Meeting 4 (ovelapping)',
                    location: 'london',
                    start: today(7, 45),
                    end: today(8, 30)
                },
                {
                    name: 'Meeting 5 (ovelapping)',
                    location: 'london',
                    start: today(8, 0),
                    end: today(8, 15)
                },
                {
                    name: 'Meeting',
                    location: '1',
                    start: today(0, 0),
                    end: today(1, 30)
                },
                {
                    name: 'Meeting',
                    location: '5',
                    start: today(0, 0),
                    end: today(1, 30)
                },
                {
                    name: 'Meeting',
                    location: '1',
                    start: today(10, 0),
                    end: today(11, 30)
                },
                {
                    name: 'Meeting with custom class',
                    location: '2',
                    start: yesterday(22, 0),
                    end: today(1, 30),
                    class: 'custom-class'
                },
                {
                    name: 'Meeting just after the previous one',
                    location: '2',
                    start: today(1, 45),
                    end: today(2, 45),
                    class: 'custom-class'
                },
                {
                    name: 'And another one...',
                    location: '2',
                    start: today(3, 10),
                    end: today(5, 30),
                    class: 'custom-class'
                },
                {
                    name: 'Disabled meeting',
                    location: '3',
                    start: yesterday(22, 15),
                    end: yesterday(23, 30),
                    disabled: true
                },
                {
                    name: 'Meeting',
                    location: '3',
                    start: yesterday(23, 45),
                    end: today(1, 30)
                },
                {
                    name: 'Meeting that started early',
                    location: '6',
                    start: yesterday(21, 45),
                    end: today(0, 45)
                },
                {
                    name: 'Late meeting',
                    location: '5',
                    start: today(11, 15),
                    end: today(13, 45)
                },
            ];
            // -------------------------- Helpers ------------------------------
			function today(hours, minutes) {
				var date = new Date();
				date.setHours(hours, minutes, 0, 0);
				return date;
			}
			function yesterday(hours, minutes) {
				var date = today(hours, minutes);
				date.setTime(date.getTime() - 24 * 60 * 60 * 1000);
				return date;
			}
			function tomorrow(hours, minutes) {
				var date = today(hours, minutes);
				date.setTime(date.getTime() + 24 * 60 * 60 * 1000);
				return date;
			}

            var $sked1 = $('#sked1').skedTape({
                caption: '',
                start: today({{ minHour }}, 0),
                end: today({{ maxHour }}, 0),
                showEventTime: true,
                showEventDuration: true,
                showDates: false,
                scrollWithYWheel: true,
                locations: locations2.slice(),
                events: events2.slice(),
                maxTimeGapHi: 60 * 1000, // 1 minute
                minGapTimeBetween: 1 * 60 * 1000,
                snapToMins: 1,
                editMode: false,
                timeIndicatorSerifs: true,
                showIntermission: true,
                formatters: {
                    duration: function (ms, opts) {
                        return $.fn.skedTape.format.duration(ms, {
                            hrs: 'h',
                            min: ' '
                        });
                    },
                },
                /*canAddIntoLocation: function(location, event) {
                    return location.id !== 'london';
                },*/
                postRenderLocation: function($el, location, canAdd) {
                    this.constructor.prototype.postRenderLocation($el, location, canAdd);
                    $el.prepend('<i class="fas fa-thumbtack text-muted"/> ');
                }
            });


	</script>


{% endblock %}


