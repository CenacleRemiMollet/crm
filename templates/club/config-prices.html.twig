{% extends 'dashboard.html.twig' %}


{% block stylesheets2 %}
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
{% endblock %}


{% block dashboardcontent %}

	<br>
    <div class="table-content">

    	{# CREATE #}
        <button type="button" class="btn btn-primary btn-lg" id="btn-add">Ajouter</button>
    	<div id="div-add" class="d-none">
             <table class="table table-borded table-striped" style="max-width: 600px">
                <tbody>
                    <tr><td>UUID</td><td><input class="form-control input-sm inputadd" name="uuid"></td></tr>
                    <tr><td>Discipline/titre *</td><td><input class="form-control input-sm inputadd" name="discipline"></td></tr>
                    <tr><td>Categorie</td><td><input class="form-control input-sm inputadd" name="category"></td></tr>
                    <tr><td>Commentaire</td><td><input class="form-control input-sm inputadd" name="comment"></td></tr>
                    <tr><td>1er enfant</td><td><input class="form-control input-sm inputadd" name="child1" data-format="float"></td></tr>
                    <tr><td>2ème enfant</td><td><input class="form-control input-sm inputadd" name="child2" data-format="float"></td></tr>
                    <tr><td>3ème enfant</td><td><input class="form-control input-sm inputadd" name="child3" data-format="float"></td></tr>
                    <tr><td>Adulte</td><td><input class="form-control input-sm inputadd" name="adult" data-format="float"></td></tr>
                </tbody>
            </table>
            <span id="add-message"></span>
            <button type="button" class="btn btn-primary btn-lg" id="btn-create">Créer</button>
    	</div>
		
    	{# UPDATE #}
    	<br>
    	<h3>{{ club.name }}</h3>
        {% for price in prices %}
        	<hr>
        	<div>
        	     <h5>{{ price.uuid }}</h5>
                 <table class="table table-borded table-responsive table-striped" id="table-list" data-priceuuid="{{ price.uuid }}">
                    <tbody>
                        <tr data-type="uuid"><td>UUID</td><td>{{ price.uuid }}</td><td></td></tr>
                        <tr data-type="discipline"><td>Discipline</td><td>{{ price.discipline }}</td><td></td></tr>
                        <tr data-type="category"><td>Categorie</td><td>{% if(price.category is defined) %}{{ price.category }}{% endif %}</td><td></td></tr>
                        <tr data-type="comment"><td>Commentaire</td><td>{% if(price.comment is defined) %}{{ price.comment }}{% endif %}</td><td></td></tr>
                        <tr data-type="child1" data-format="float"><td>1er enfant</td><td>{% if(price.child1 is defined) %}{{ price.child1 }}{% endif %}</td><td></td></tr>
                        <tr data-type="child2" data-format="float"><td>2ème enfant</td><td>{% if(price.child2 is defined) %}{{ price.child2 }}{% endif %}</td><td></td></tr>
                        <tr data-type="child3" data-format="float"><td>3ème enfant</td><td>{% if(price.child3 is defined) %}{{ price.child3 }}{% endif %}</td><td></td></tr>
                        <tr data-type="adult" data-format="float"><td>Adulte</td><td>{% if(price.adult is defined) %}{{ price.adult }}{% endif %}</td><td></td></tr>
                    </tbody>
                </table>
        	</div>
        {% endfor %}
        <br>
        
    </div>

{% endblock %}


{% block javascripts_end_body %}
	<script src="{{ app.request.baseUrl }}/vendor/bootstable/bootstable.min.js"></script>
    <script>
        $("#btn-add").click(function() {
        	$("#btn-add").hide();
        	$("#div-add").removeClass('d-none');
        });
        
        $("#btn-create").click(function() {
        	data = {};
        	$(".inputadd").each(function (index) {
        	    var value = $(this).val();
        	    if(value) {
        	        var format = $(this).attr('data-format');
            		if("float" == format) {
            			value = value ? parseFloat(value) : 0;
            		}
        			data[$(this).attr('name')] = value;
        			//console.log($(this).attr('name'), value);
        		}
        	});
    		$.ajax({
    			type: 'POST',			
    			url : '{{ app.request.baseUrl }}/api/club/{{ club.uuid }}/prices',
    			contentType: 'application/json',	
    			data: JSON.stringify(data),
    			dataType: 'json',
    			cache: false,			
    			beforeSend: function(xhr) { xhr.setRequestHeader('X-ClientId', 'Web'); },
    			success: function (data) {
    				//console.log('success', data);
    				location.reload();
    			},
    			error: function(data) {
    			$("#add-message").text('error');
    				console.log('error', data);
    			}
			});
        });
        
        $(".table-responsive").SetEditable({
        	columnsEd: "1",
        	onEdit: function(row) {
        		var priceUuid = row[0].parentNode.parentNode.getAttribute('data-priceuuid');
        		var propKey = row[0].getAttribute('data-type');
        		var propValue = row[0].childNodes[1].innerHTML;
        		var propFormat = row[0].getAttribute('data-format');
        		if("float" == propFormat) {
        			propValue = propValue ? parseFloat(propValue) : 0;
        		}
        		//console.log(priceUuid, propKey, propValue);
        		$.ajax({
        			type: 'PATCH',			
        			url : '{{ app.request.baseUrl }}/api/club/{{ club.uuid }}/prices/' + priceUuid,
        			contentType: 'application/json',	
        			data: JSON.stringify({[propKey]: propValue}),
        			dataType: 'json',
        			cache: false,			
        			beforeSend: function(xhr) { xhr.setRequestHeader('X-ClientId', 'Web'); },
        			success: function (data) {
                		if(propKey == 'uuid') {
                			row[0].parentNode.parentNode.setAttribute('data-priceuuid', propValue);
                		}
        				//console.log('success', data);
        			},
        			error: function(data) {
        				row[0].childNodes[5].innerHTML= 'error';
        				console.log('error', data);
        			}
				});
        	},
        	//onDelete: function(row) { console.log('onDelete', row); },
        	onBeforeDelete: function(row) {
        		console.log('onBeforeDelete', row);
        		throw new Exception(); // to ignore delete
        	}, 
        	//onAdd: function(row) { console.log('onAdd', row); }
        });
        /*$('#add').click(function() {
            rowAddNewAndEdit('table-list', [1,2,3]);
        });*/
    </script>
{% endblock %}